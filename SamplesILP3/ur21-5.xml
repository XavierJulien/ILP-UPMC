<?xml version='1.0' encoding='UTF-8' ?>
<!-- 

;;; $Id$
(comment "double fermeture recursive utilisee en dehors de sa portee native")
(if ((letrec ()
       (define (odd n)
         (if (= n 0) #f (even (- n 1))) )
       (define (even n)
         (if (<= n 0) #t (odd (- n 1))) )
       even )
     4 )
    21
    #f )

;;; end of ur21-5.scm

 -->
<program
><!-- test:name description='double fermeture recursive utilisee en dehors de sa portee native' 
--><alternative
><condition
><invocation
><function
><codefinitions
><functions
><functionDefinition name='odd'
><variables
><variable name='n'
/></variables
><body
><alternative
><condition
><binaryOperation operator='=='
><leftOperand
><variable name='n'
/></leftOperand
><rightOperand
><integer value='0'
/></rightOperand
></binaryOperation
></condition
><consequence
><boolean value='false'
/></consequence
><alternant
><invocation
><function
><variable name='even'
/></function
><arguments
><binaryOperation operator='-'
><leftOperand
><variable name='n'
/></leftOperand
><rightOperand
><integer value='1'
/></rightOperand
></binaryOperation
></arguments
></invocation
></alternant
></alternative
></body
></functionDefinition
><functionDefinition name='even'
><variables
><variable name='n'
/></variables
><body
><alternative
><condition
><binaryOperation operator='&lt;='
><leftOperand
><variable name='n'
/></leftOperand
><rightOperand
><integer value='0'
/></rightOperand
></binaryOperation
></condition
><consequence
><boolean value='true'
/></consequence
><alternant
><invocation
><function
><variable name='odd'
/></function
><arguments
><binaryOperation operator='-'
><leftOperand
><variable name='n'
/></leftOperand
><rightOperand
><integer value='1'
/></rightOperand
></binaryOperation
></arguments
></invocation
></alternant
></alternative
></body
></functionDefinition
></functions
><body
><variable name='even'
/></body
></codefinitions
></function
><arguments
><integer value='4'
/></arguments
></invocation
></condition
><consequence
><integer value='21'
/></consequence
><alternant
><boolean value='false'
/></alternant
></alternative
></program
>
