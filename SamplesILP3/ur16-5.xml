<?xml version='1.0' encoding='UTF-8' ?>
<!-- 

;;; $Id$
(comment "deux definitions locales non mutuellement recursives, utilisees")
(letrec ()
  (define (fact n)
    (if (> n 1) 
        (* n (fact (- n 1)))
        1 ) )
  (define (double x) (* 2 x))
  (+ (double (fact 3)) 4) )

;;; end of ur16-5.scm

 -->
<program
><!-- test:name description='deux definitions locales non mutuellement recursives, utilisees' 
--><codefinitions
><functions
><functionDefinition name='fact'
><variables
><variable name='n'
/></variables
><body
><alternative
><condition
><binaryOperation operator='&gt;'
><leftOperand
><variable name='n'
/></leftOperand
><rightOperand
><integer value='1'
/></rightOperand
></binaryOperation
></condition
><consequence
><binaryOperation operator='*'
><leftOperand
><variable name='n'
/></leftOperand
><rightOperand
><invocation
><function
><variable name='fact'
/></function
><arguments
><binaryOperation operator='-'
><leftOperand
><variable name='n'
/></leftOperand
><rightOperand
><integer value='1'
/></rightOperand
></binaryOperation
></arguments
></invocation
></rightOperand
></binaryOperation
></consequence
><alternant
><integer value='1'
/></alternant
></alternative
></body
></functionDefinition
><functionDefinition name='double'
><variables
><variable name='x'
/></variables
><body
><binaryOperation operator='*'
><leftOperand
><integer value='2'
/></leftOperand
><rightOperand
><variable name='x'
/></rightOperand
></binaryOperation
></body
></functionDefinition
></functions
><body
><binaryOperation operator='+'
><leftOperand
><invocation
><function
><variable name='double'
/></function
><arguments
><invocation
><function
><variable name='fact'
/></function
><arguments
><integer value='3'
/></arguments
></invocation
></arguments
></invocation
></leftOperand
><rightOperand
><integer value='4'
/></rightOperand
></binaryOperation
></body
></codefinitions
></program
>
